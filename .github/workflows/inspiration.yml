name: ü™Ñ Actualizar frase inspiradora

on:
  schedule:
    - cron: "0 */12 * * *" # Cada 12 horas
  workflow_dispatch: # Permite ejecutarlo manualmente

permissions:
  contents: write

jobs:
  update-activity:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout del repositorio
        uses: actions/checkout@v4

      - name: Instalar dependencias necesarias
        run: sudo apt-get install -y jq curl

      - name: Generar frase inspiradora con OpenAI
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          MAX_TOKENS: "300"
          MODEL: "gpt-4o-mini"
        run: |
          set -euo pipefail

          # 1Ô∏è‚É£ Crear prompt para OpenAI
          PROMPT="Eres un asistente conciso y motivador. Genera una frase inspiradora (1-2 oraciones) enfocada en programaci√≥n, disciplina y mejora continua. Luego agrega una sugerencia corta (1 l√≠nea) de acci√≥n pr√°ctica para el d√≠a relacionada con programaci√≥n. Formato de salida: {\"quote\": \"<frase>\", \"action\": \"<acci√≥n>\"}"

          # 2Ô∏è‚É£ Llamar a la API de OpenAI
          RESPONSE=$(curl -sS https://api.openai.com/v1/chat/completions \
            -H "Content-Type: application/json" \
            -H "Authorization: Bearer ${OPENAI_API_KEY}" \
            -d "$(jq -n \
              --arg model "$MODEL" \
              --arg prompt "$PROMPT" \
              --arg max_tokens "$MAX_TOKENS" \
              '{model: $model, messages: [{role: "user", content: $prompt}], max_tokens: ($max_tokens | tonumber), temperature: 0.8, n: 1}')")

          CHOICE=$(echo "$RESPONSE" | jq -r '.choices[0].message.content // empty')

          if [ -z "$CHOICE" ]; then
            echo "‚ö†Ô∏è Error: OpenAI no devolvi√≥ texto v√°lido"
            echo "$RESPONSE"
            exit 1
          fi

          # 3Ô∏è‚É£ Procesar datos para insertar en README
          DATE=$(date '+%Y-%m-%d %H:%M:%S')
          QUOTE=$(echo "$CHOICE" | jq -r '.quote // empty' 2>/dev/null || echo "$CHOICE")
          ACTION_LINE=$(echo "$CHOICE" | jq -r '.action // empty' 2>/dev/null || echo "")

          QUOTE_ESCAPED=$(echo "$QUOTE" | sed 's/[\/&]/\\&/g')
          ACTION_ESCAPED=$(echo "$ACTION_LINE" | sed 's/[\/&]/\\&/g')

          NEW_CONTENT="## üí° Inspiraci√≥n autom√°tica ‚Äî ${DATE}\n\nüí¨ **Frase del d√≠a:**\n> ${QUOTE_ESCAPED}\n\nüõ†Ô∏è **Acci√≥n recomendada:** ${ACTION_ESCAPED}\n\n_Actualizado autom√°ticamente cada 12 horas._"

          # 4Ô∏è‚É£ Reemplazar bloque en README.md usando AWK
          awk -v new_content="$NEW_CONTENT" '
            BEGIN {in_block=0}
            /<!--START_SECTION:inspiracion-->/ {
              print;
              print new_content;
              in_block=1;
              next
            }
            /<!--END_SECTION:inspiracion-->/ {
              in_block=0
            }
            !in_block
          ' README.md > README.tmp && mv README.tmp README.md

          echo "‚úÖ README actualizado correctamente con la nueva inspiraci√≥n."

      - name: Commit & Push changes
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add README.md
          if git diff --staged --quiet; then
            echo "Sin cambios que subir."
          else
            git commit -m "‚ú® Actualizaci√≥n autom√°tica de inspiraci√≥n [skip ci]"
            git push origin HEAD:main
          fi


